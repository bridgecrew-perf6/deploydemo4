{"ast":null,"code":"var _jsxFileName = \"D:\\\\kickeradminpannel\\\\admin\\\\src\\\\views\\\\theme\\\\colors\\\\Colors.js\";\nimport PropTypes from 'prop-types';\n/*import React, { useEffect, useState, createRef } from 'react'\nimport classNames from 'classnames'\nimport { CRow, CCol, CCard, CCardHeader, CCardBody } from '@coreui/react'\nimport { rgbToHex } from '@coreui/utils'\nimport { DocsLink } from 'src/components'*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThemeView = () => {\n  /*const [color, setColor] = useState('rgb(255, 255, 255)')\n  const ref = createRef()\n   useEffect(() => {\n    const el = ref.current.parentNode.firstChild\n    const varColor = window.getComputedStyle(el).getPropertyValue('background-color')\n    setColor(varColor)\n  }, [ref])*/\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table w-100\",\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"text-medium-emphasis\",\n          children: \"HEX:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"text-medium-emphasis\",\n          children: \"RGB:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ThemeView;\n\nconst ThemeColor = _ref => {\n  let {\n    className,\n    children\n  } = _ref;\n  const classes = classNames(className, 'theme-color w-75 rounded mb-3');\n  return /*#__PURE__*/_jsxDEV(CCol, {\n    xs: 12,\n    sm: 6,\n    md: 4,\n    xl: 2,\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes,\n      style: {\n        paddingTop: '75%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), children, /*#__PURE__*/_jsxDEV(ThemeView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ThemeColor;\nThemeColor.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n{\n  /*const Colors = () => {\n   return (\n     <>\n       <CCard className=\"mb-4\">\n         <CCardHeader>\n           Theme colors\n           <DocsLink href=\"https://coreui.io/docs/utilities/colors/\" />\n         </CCardHeader>\n         <CCardBody>\n           <CRow>\n             <ThemeColor className=\"bg-primary\">\n               <h6>Brand Primary Color</h6>\n             </ThemeColor>\n             <ThemeColor className=\"bg-secondary\">\n               <h6>Brand Secondary Color</h6>\n             </ThemeColor>\n             <ThemeColor className=\"bg-success\">\n               <h6>Brand Success Color</h6>\n             </ThemeColor>\n             <ThemeColor className=\"bg-danger\">\n               <h6>Brand Danger Color</h6>\n             </ThemeColor>\n             <ThemeColor className=\"bg-warning\">\n               <h6>Brand Warning Color</h6>\n             </ThemeColor>\n             <ThemeColor className=\"bg-info\">\n               <h6>Brand Info Color</h6>\n             </ThemeColor>\n             <ThemeColor className=\"bg-light\">\n               <h6>Brand Light Color</h6>\n             </ThemeColor>\n             <ThemeColor className=\"bg-dark\">\n               <h6>Brand Dark Color</h6>\n             </ThemeColor>\n           </CRow>\n         </CCardBody>\n       </CCard>\n     </>\n   )\n  }*/\n}\nexport default Colors;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ThemeView\");\n$RefreshReg$(_c2, \"ThemeColor\");","map":{"version":3,"sources":["D:/kickeradminpannel/admin/src/views/theme/colors/Colors.js"],"names":["PropTypes","ThemeView","ref","ThemeColor","className","children","classes","classNames","paddingTop","propTypes","node","string","Colors"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB;AACF;AACA;AACA;AACA;AACA;AACA;AAGE,sBACE;AAAO,IAAA,SAAS,EAAC,aAAjB;AAA+B,IAAA,GAAG,EAAEC,GAApC;AAAA,2BACE;AAAA,8BACE;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAxBD;;KAAMD,S;;AA0BN,MAAME,UAAU,GAAG,QAA6B;AAAA,MAA5B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA4B;AAC9C,QAAMC,OAAO,GAAGC,UAAU,CAACH,SAAD,EAAY,+BAAZ,CAA1B;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE,EAAV;AAAc,IAAA,EAAE,EAAE,CAAlB;AAAqB,IAAA,EAAE,EAAE,CAAzB;AAA4B,IAAA,EAAE,EAAE,CAAhC;AAAmC,IAAA,SAAS,EAAC,MAA7C;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEE,OAAhB;AAAyB,MAAA,KAAK,EAAE;AAAEE,QAAAA,UAAU,EAAE;AAAd;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGH,QAFH,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CATD;;MAAMF,U;AAWNA,UAAU,CAACM,SAAX,GAAuB;AACrBJ,EAAAA,QAAQ,EAAEL,SAAS,CAACU,IADC;AAErBN,EAAAA,SAAS,EAAEJ,SAAS,CAACW;AAFA,CAAvB;AAKA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI;AAEJ,eAAeC,MAAf","sourcesContent":["import PropTypes from 'prop-types'\n/*import React, { useEffect, useState, createRef } from 'react'\nimport classNames from 'classnames'\nimport { CRow, CCol, CCard, CCardHeader, CCardBody } from '@coreui/react'\nimport { rgbToHex } from '@coreui/utils'\nimport { DocsLink } from 'src/components'*/\n\nconst ThemeView = () => {\n  /*const [color, setColor] = useState('rgb(255, 255, 255)')\n  const ref = createRef()\n\n  useEffect(() => {\n    const el = ref.current.parentNode.firstChild\n    const varColor = window.getComputedStyle(el).getPropertyValue('background-color')\n    setColor(varColor)\n  }, [ref])*/\n\n  return (\n    <table className=\"table w-100\" ref={ref}>\n      <tbody>\n        <tr>\n          <td className=\"text-medium-emphasis\">HEX:</td>\n         {/* <td className=\"font-weight-bold\">{rgbToHex(color)}</td>*/}\n        </tr>\n        <tr>\n          <td className=\"text-medium-emphasis\">RGB:</td>\n         {/* <td className=\"font-weight-bold\">{color}</td>*/}\n        </tr>\n      </tbody>\n  </table>\n  )\n}\n\nconst ThemeColor = ({ className, children }) => {\n  const classes = classNames(className, 'theme-color w-75 rounded mb-3')\n  return (\n    <CCol xs={12} sm={6} md={4} xl={2} className=\"mb-4\">\n      <div className={classes} style={{ paddingTop: '75%' }}></div>\n      {children}\n      <ThemeView />\n    </CCol>\n  )\n}\n\nThemeColor.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\n{/*const Colors = () => {\n  return (\n    <>\n      <CCard className=\"mb-4\">\n        <CCardHeader>\n          Theme colors\n          <DocsLink href=\"https://coreui.io/docs/utilities/colors/\" />\n        </CCardHeader>\n        <CCardBody>\n          <CRow>\n            <ThemeColor className=\"bg-primary\">\n              <h6>Brand Primary Color</h6>\n            </ThemeColor>\n            <ThemeColor className=\"bg-secondary\">\n              <h6>Brand Secondary Color</h6>\n            </ThemeColor>\n            <ThemeColor className=\"bg-success\">\n              <h6>Brand Success Color</h6>\n            </ThemeColor>\n            <ThemeColor className=\"bg-danger\">\n              <h6>Brand Danger Color</h6>\n            </ThemeColor>\n            <ThemeColor className=\"bg-warning\">\n              <h6>Brand Warning Color</h6>\n            </ThemeColor>\n            <ThemeColor className=\"bg-info\">\n              <h6>Brand Info Color</h6>\n            </ThemeColor>\n            <ThemeColor className=\"bg-light\">\n              <h6>Brand Light Color</h6>\n            </ThemeColor>\n            <ThemeColor className=\"bg-dark\">\n              <h6>Brand Dark Color</h6>\n            </ThemeColor>\n          </CRow>\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}*/}\n\nexport default Colors\n"]},"metadata":{},"sourceType":"module"}