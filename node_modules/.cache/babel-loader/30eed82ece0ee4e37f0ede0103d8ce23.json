{"ast":null,"code":"var _jsxFileName = \"C:\\\\kickrtechnology\\\\admin\\\\src\\\\views\\\\Department\\\\All Department\\\\All Department.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from \"react\"; //import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n//import { faEdit, faDeleteLeft, } from '@fortawesome/free-solid-svg-icons'\n//import Modal from 'react-modal'\n\nimport { useHistory } from 'react-router-dom';\nimport { nanoid } from \"nanoid\";\nimport data from \"src/views/Department/mock-data.json\";\nimport ReadOnlyRow from \"src/views/Department/EditableRow\";\nimport EditableRow from \"src/views/Department/ReadOnlyRow\"; //import { Modal } from \"react-bootstrap\";\n//import \"bootstrap/dist/css/bootstrap.css\";\n//import  DeleteIcons from '@mui/icons-material/Delete';\n\nimport \"src/asset/plugins/bootstrap/css/bootstrap.min.css\";\nimport \"src/asset/css/main.css\";\nimport { Link } from 'react-router-dom'; //import EditModal from './EditModal';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst All_Department = () => {\n  _s();\n\n  const history = useHistory();\n  {\n    /*const [showModal, setShowModal] = useState(false)\r\n    const [showEditModal, setEditModal] = useState(false)\r\n    const showModalBtn = (bool) => {\r\n       setShowModal(bool)\r\n    }\r\n    const showEditModalBtn = (bool) => {\r\n       setEditModal(bool)\r\n    }*/\n  }\n\n  const handleDirect = event => {\n    //event.preventDefault();\n    history.push('/Add Department');\n  };\n\n  const [contacts, setContacts] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    fullName: \"\",\n    address: \"\",\n    phoneNumber: \"\",\n    email: \"\"\n  });\n  const [editFormData, setEditFormData] = useState({\n    fullName: \"\",\n    address: \"\",\n    phoneNumber: \"\",\n    email: \"\"\n  });\n  const [editContactId, setEditContactId] = useState(null);\n\n  const handleAddFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...addFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...editFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      fullName: addFormData.fullName,\n      address: addFormData.address,\n      phoneNumber: addFormData.phoneNumber,\n      email: addFormData.email\n    };\n    const newContacts = [...contacts, newContact];\n    setContacts(newContacts);\n  };\n\n  const handleEditFormSubmit = event => {\n    event.preventDefault();\n    const editedContact = {\n      id: editContactId,\n      fullName: editFormData.fullName,\n      address: editFormData.address,\n      phoneNumber: editFormData.phoneNumber,\n      email: editFormData.email\n    };\n    const newContacts = [...contacts];\n    const index = contacts.findIndex(contact => contact.id === editContactId);\n    newContacts[index] = editedContact;\n    setContacts(newContacts);\n    setEditContactId(null);\n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n    const formValues = {\n      fullName: contact.fullName,\n      address: contact.address,\n      phoneNumber: contact.phoneNumber,\n      email: contact.email\n    };\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleDeleteClick = contactId => {\n    const newContacts = [...contacts];\n    const index = contacts.findIndex(contact => contact.id === contactId);\n    newContacts.splice(index, 1);\n    setContacts(newContacts);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEditFormSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Phone Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: contacts.map(contact => /*#__PURE__*/_jsxDEV(Fragment, {\n              children: editContactId === contact.id ? /*#__PURE__*/_jsxDEV(EditableRow, {\n                editFormData: editFormData,\n                handleEditFormChange: handleEditFormChange,\n                handleCancelClick: handleCancelClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(ReadOnlyRow, {\n                contact: contact,\n                handleEditClick: handleEditClick,\n                handleDeleteClick: handleDeleteClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add a Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"fullName\",\n          required: \"required\",\n          placeholder: \"Enter a name...\",\n          onChange: handleAddFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"address\",\n          required: \"required\",\n          placeholder: \"Enter an addres...\",\n          onChange: handleAddFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"phoneNumber\",\n          required: \"required\",\n          placeholder: \"Enter a phone number...\",\n          onChange: handleAddFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          required: \"required\",\n          placeholder: \"Enter an email...\",\n          onChange: handleAddFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(All_Department, \"2WpErXOuFkmm+8ep0C/2L+nRBf4=\", false, function () {\n  return [useHistory];\n});\n\n_c = All_Department;\nexport default All_Department;\n\nvar _c;\n\n$RefreshReg$(_c, \"All_Department\");","map":{"version":3,"sources":["C:/kickrtechnology/admin/src/views/Department/All Department/All Department.js"],"names":["React","useState","Fragment","useHistory","nanoid","data","ReadOnlyRow","EditableRow","Link","All_Department","history","handleDirect","event","push","contacts","setContacts","addFormData","setAddFormData","fullName","address","phoneNumber","email","editFormData","setEditFormData","editContactId","setEditContactId","handleAddFormChange","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","handleEditFormChange","handleAddFormSubmit","newContact","id","newContacts","handleEditFormSubmit","editedContact","index","findIndex","contact","handleEditClick","formValues","handleCancelClick","handleDeleteClick","contactId","splice","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C,C,CACA;AACA;AACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,IAAP,MAAiB,qCAAjB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,WAAP,MAAwB,kCAAxB,C,CACA;AACA;AACA;;AAEA,OAAO,mDAAP;AACA,OAAO,wBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;;;;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AAEA;AAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AAAQ;;AACJ,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC5B;AACAF,IAAAA,OAAO,CAACG,IAAR,CAAa,iBAAb;AACH,GAHD;;AAKA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAACI,IAAD,CAAxC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC;AAC3CiB,IAAAA,QAAQ,EAAE,EADiC;AAE3CC,IAAAA,OAAO,EAAE,EAFkC;AAG3CC,IAAAA,WAAW,EAAE,EAH8B;AAI3CC,IAAAA,KAAK,EAAE;AAJoC,GAAD,CAA9C;AAOA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC;AAC7CiB,IAAAA,QAAQ,EAAE,EADmC;AAE7CC,IAAAA,OAAO,EAAE,EAFoC;AAG7CC,IAAAA,WAAW,EAAE,EAHgC;AAI7CC,IAAAA,KAAK,EAAE;AAJsC,GAAD,CAAhD;AAOA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCxB,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMyB,mBAAmB,GAAId,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACe,cAAN;AAEA,UAAMC,SAAS,GAAGhB,KAAK,CAACiB,MAAN,CAAaC,YAAb,CAA0B,MAA1B,CAAlB;AACA,UAAMC,UAAU,GAAGnB,KAAK,CAACiB,MAAN,CAAaG,KAAhC;AAEA,UAAMC,WAAW,GAAG,EAAE,GAAGjB;AAAL,KAApB;AACAiB,IAAAA,WAAW,CAACL,SAAD,CAAX,GAAyBG,UAAzB;AAEAd,IAAAA,cAAc,CAACgB,WAAD,CAAd;AACH,GAVD;;AAYA,QAAMC,oBAAoB,GAAItB,KAAD,IAAW;AACpCA,IAAAA,KAAK,CAACe,cAAN;AAEA,UAAMC,SAAS,GAAGhB,KAAK,CAACiB,MAAN,CAAaC,YAAb,CAA0B,MAA1B,CAAlB;AACA,UAAMC,UAAU,GAAGnB,KAAK,CAACiB,MAAN,CAAaG,KAAhC;AAEA,UAAMC,WAAW,GAAG,EAAE,GAAGX;AAAL,KAApB;AACAW,IAAAA,WAAW,CAACL,SAAD,CAAX,GAAyBG,UAAzB;AAEAR,IAAAA,eAAe,CAACU,WAAD,CAAf;AACH,GAVD;;AAYA,QAAME,mBAAmB,GAAIvB,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACe,cAAN;AAEA,UAAMS,UAAU,GAAG;AACfC,MAAAA,EAAE,EAAEjC,MAAM,EADK;AAEfc,MAAAA,QAAQ,EAAEF,WAAW,CAACE,QAFP;AAGfC,MAAAA,OAAO,EAAEH,WAAW,CAACG,OAHN;AAIfC,MAAAA,WAAW,EAAEJ,WAAW,CAACI,WAJV;AAKfC,MAAAA,KAAK,EAAEL,WAAW,CAACK;AALJ,KAAnB;AAQA,UAAMiB,WAAW,GAAG,CAAC,GAAGxB,QAAJ,EAAcsB,UAAd,CAApB;AACArB,IAAAA,WAAW,CAACuB,WAAD,CAAX;AACH,GAbD;;AAeA,QAAMC,oBAAoB,GAAI3B,KAAD,IAAW;AACpCA,IAAAA,KAAK,CAACe,cAAN;AAEA,UAAMa,aAAa,GAAG;AAClBH,MAAAA,EAAE,EAAEb,aADc;AAElBN,MAAAA,QAAQ,EAAEI,YAAY,CAACJ,QAFL;AAGlBC,MAAAA,OAAO,EAAEG,YAAY,CAACH,OAHJ;AAIlBC,MAAAA,WAAW,EAAEE,YAAY,CAACF,WAJR;AAKlBC,MAAAA,KAAK,EAAEC,YAAY,CAACD;AALF,KAAtB;AAQA,UAAMiB,WAAW,GAAG,CAAC,GAAGxB,QAAJ,CAApB;AAEA,UAAM2B,KAAK,GAAG3B,QAAQ,CAAC4B,SAAT,CAAoBC,OAAD,IAAaA,OAAO,CAACN,EAAR,KAAeb,aAA/C,CAAd;AAEAc,IAAAA,WAAW,CAACG,KAAD,CAAX,GAAqBD,aAArB;AAEAzB,IAAAA,WAAW,CAACuB,WAAD,CAAX;AACAb,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAnBD;;AAqBA,QAAMmB,eAAe,GAAG,CAAChC,KAAD,EAAQ+B,OAAR,KAAoB;AACxC/B,IAAAA,KAAK,CAACe,cAAN;AACAF,IAAAA,gBAAgB,CAACkB,OAAO,CAACN,EAAT,CAAhB;AAEA,UAAMQ,UAAU,GAAG;AACf3B,MAAAA,QAAQ,EAAEyB,OAAO,CAACzB,QADH;AAEfC,MAAAA,OAAO,EAAEwB,OAAO,CAACxB,OAFF;AAGfC,MAAAA,WAAW,EAAEuB,OAAO,CAACvB,WAHN;AAIfC,MAAAA,KAAK,EAAEsB,OAAO,CAACtB;AAJA,KAAnB;AAOAE,IAAAA,eAAe,CAACsB,UAAD,CAAf;AACH,GAZD;;AAcA,QAAMC,iBAAiB,GAAG,MAAM;AAC5BrB,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFD;;AAIA,QAAMsB,iBAAiB,GAAIC,SAAD,IAAe;AACrC,UAAMV,WAAW,GAAG,CAAC,GAAGxB,QAAJ,CAApB;AAEA,UAAM2B,KAAK,GAAG3B,QAAQ,CAAC4B,SAAT,CAAoBC,OAAD,IAAaA,OAAO,CAACN,EAAR,KAAeW,SAA/C,CAAd;AAEAV,IAAAA,WAAW,CAACW,MAAZ,CAAmBR,KAAnB,EAA0B,CAA1B;AAEA1B,IAAAA,WAAW,CAACuB,WAAD,CAAX;AACH,GARD;;AAaA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAM,QAAA,QAAQ,EAAEC,oBAAhB;AAAA,+BACI;AAAA,kCACI;AAAA,mCACI;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI;AAAA,sBACKzB,QAAQ,CAACoC,GAAT,CAAcP,OAAD,iBACV,QAAC,QAAD;AAAA,wBACKnB,aAAa,KAAKmB,OAAO,CAACN,EAA1B,gBACG,QAAC,WAAD;AACI,gBAAA,YAAY,EAAEf,YADlB;AAEI,gBAAA,oBAAoB,EAAEY,oBAF1B;AAGI,gBAAA,iBAAiB,EAAEY;AAHvB;AAAA;AAAA;AAAA;AAAA,sBADH,gBAOG,QAAC,WAAD;AACI,gBAAA,OAAO,EAAEH,OADb;AAEI,gBAAA,eAAe,EAAEC,eAFrB;AAGI,gBAAA,iBAAiB,EAAEG;AAHvB;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAkCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCJ,eAmCI;AAAM,QAAA,QAAQ,EAAEZ,mBAAhB;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,QAAQ,EAAC,UAHb;AAII,UAAA,WAAW,EAAC,iBAJhB;AAKI,UAAA,QAAQ,EAAET;AALd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,SAFT;AAGI,UAAA,QAAQ,EAAC,UAHb;AAII,UAAA,WAAW,EAAC,oBAJhB;AAKI,UAAA,QAAQ,EAAEA;AALd;AAAA;AAAA;AAAA;AAAA,gBARJ,eAeI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,aAFT;AAGI,UAAA,QAAQ,EAAC,UAHb;AAII,UAAA,WAAW,EAAC,yBAJhB;AAKI,UAAA,QAAQ,EAAEA;AALd;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAsBI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,QAAQ,EAAC,UAHb;AAII,UAAA,WAAW,EAAC,mBAJhB;AAKI,UAAA,QAAQ,EAAEA;AALd;AAAA;AAAA;AAAA;AAAA,gBAtBJ,eA6BI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAuEH,CAnMD;;GAAMjB,c;UACcN,U;;;KADdM,c;AA4MM,eAAeA,cAAf","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\n//import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n//import { faEdit, faDeleteLeft, } from '@fortawesome/free-solid-svg-icons'\r\n//import Modal from 'react-modal'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { nanoid } from \"nanoid\";\r\nimport data from \"src/views/Department/mock-data.json\";\r\nimport ReadOnlyRow from \"src/views/Department/EditableRow\";\r\nimport EditableRow from \"src/views/Department/ReadOnlyRow\";\r\n//import { Modal } from \"react-bootstrap\";\r\n//import \"bootstrap/dist/css/bootstrap.css\";\r\n//import  DeleteIcons from '@mui/icons-material/Delete';\r\n\r\nimport \"src/asset/plugins/bootstrap/css/bootstrap.min.css\";\r\nimport \"src/asset/css/main.css\";\r\nimport { Link } from 'react-router-dom'\r\n//import EditModal from './EditModal';\r\n\r\n\r\nconst All_Department = () => {\r\n    const history = useHistory();\r\n\r\n    {/*const [showModal, setShowModal] = useState(false)\r\n    const [showEditModal, setEditModal] = useState(false)\r\n    const showModalBtn = (bool) => {\r\n        setShowModal(bool)\r\n    }\r\n    const showEditModalBtn = (bool) => {\r\n        setEditModal(bool)\r\n    }*/}\r\n    const handleDirect = (event) => {\r\n        //event.preventDefault();\r\n        history.push('/Add Department');\r\n    };\r\n\r\n    const [contacts, setContacts] = useState(data);\r\n    const [addFormData, setAddFormData] = useState({\r\n        fullName: \"\",\r\n        address: \"\",\r\n        phoneNumber: \"\",\r\n        email: \"\",\r\n    });\r\n\r\n    const [editFormData, setEditFormData] = useState({\r\n        fullName: \"\",\r\n        address: \"\",\r\n        phoneNumber: \"\",\r\n        email: \"\",\r\n    });\r\n\r\n    const [editContactId, setEditContactId] = useState(null);\r\n\r\n    const handleAddFormChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        const fieldName = event.target.getAttribute(\"name\");\r\n        const fieldValue = event.target.value;\r\n\r\n        const newFormData = { ...addFormData };\r\n        newFormData[fieldName] = fieldValue;\r\n\r\n        setAddFormData(newFormData);\r\n    };\r\n\r\n    const handleEditFormChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        const fieldName = event.target.getAttribute(\"name\");\r\n        const fieldValue = event.target.value;\r\n\r\n        const newFormData = { ...editFormData };\r\n        newFormData[fieldName] = fieldValue;\r\n\r\n        setEditFormData(newFormData);\r\n    };\r\n\r\n    const handleAddFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const newContact = {\r\n            id: nanoid(),\r\n            fullName: addFormData.fullName,\r\n            address: addFormData.address,\r\n            phoneNumber: addFormData.phoneNumber,\r\n            email: addFormData.email,\r\n        };\r\n\r\n        const newContacts = [...contacts, newContact];\r\n        setContacts(newContacts);\r\n    };\r\n\r\n    const handleEditFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const editedContact = {\r\n            id: editContactId,\r\n            fullName: editFormData.fullName,\r\n            address: editFormData.address,\r\n            phoneNumber: editFormData.phoneNumber,\r\n            email: editFormData.email,\r\n        };\r\n\r\n        const newContacts = [...contacts];\r\n\r\n        const index = contacts.findIndex((contact) => contact.id === editContactId);\r\n\r\n        newContacts[index] = editedContact;\r\n\r\n        setContacts(newContacts);\r\n        setEditContactId(null);\r\n    };\r\n\r\n    const handleEditClick = (event, contact) => {\r\n        event.preventDefault();\r\n        setEditContactId(contact.id);\r\n\r\n        const formValues = {\r\n            fullName: contact.fullName,\r\n            address: contact.address,\r\n            phoneNumber: contact.phoneNumber,\r\n            email: contact.email,\r\n        };\r\n\r\n        setEditFormData(formValues);\r\n    };\r\n\r\n    const handleCancelClick = () => {\r\n        setEditContactId(null);\r\n    };\r\n\r\n    const handleDeleteClick = (contactId) => {\r\n        const newContacts = [...contacts];\r\n\r\n        const index = contacts.findIndex((contact) => contact.id === contactId);\r\n\r\n        newContacts.splice(index, 1);\r\n\r\n        setContacts(newContacts);\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"app-container\">\r\n                <form onSubmit={handleEditFormSubmit}>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Address</th>\r\n                                <th>Phone Number</th>\r\n                                <th>Email</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {contacts.map((contact) => (\r\n                                <Fragment>\r\n                                    {editContactId === contact.id ? (\r\n                                        <EditableRow\r\n                                            editFormData={editFormData}\r\n                                            handleEditFormChange={handleEditFormChange}\r\n                                            handleCancelClick={handleCancelClick}\r\n                                        />\r\n                                    ) : (\r\n                                        <ReadOnlyRow\r\n                                            contact={contact}\r\n                                            handleEditClick={handleEditClick}\r\n                                            handleDeleteClick={handleDeleteClick}\r\n                                        />\r\n                                    )}\r\n                                </Fragment>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </form>\r\n\r\n                <h2>Add a Contact</h2>\r\n                <form onSubmit={handleAddFormSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"fullName\"\r\n                        required=\"required\"\r\n                        placeholder=\"Enter a name...\"\r\n                        onChange={handleAddFormChange}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        required=\"required\"\r\n                        placeholder=\"Enter an addres...\"\r\n                        onChange={handleAddFormChange}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"phoneNumber\"\r\n                        required=\"required\"\r\n                        placeholder=\"Enter a phone number...\"\r\n                        onChange={handleAddFormChange}\r\n                    />\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        required=\"required\"\r\n                        placeholder=\"Enter an email...\"\r\n                        onChange={handleAddFormChange}\r\n                    />\r\n                    <button type=\"submit\">Add</button>\r\n                </form>\r\n            </div>\r\n            </>\r\n            );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            export default All_Department;"]},"metadata":{},"sourceType":"module"}